@use "@angular/material" as mat;
@use "./mat-theme-colors.scss" as mat-colors;

:root {
  @include mat.theme(
    (
      color: (
        primary: mat.$azure-palette,
        tertiary: mat.$rose-palette
      ),
      typography: "Roboto, 微软雅黑, sans-serif",
      density: -1
    )
  );

  @include mat.button-overrides(
    (
      filled-container-shape: var(--mat-sys-corner-medium),
      filled-horizontal-padding: 8px,
      filled-icon-spacing: 4px,
      filled-icon-offset: -4px,
      outlined-container-shape: var(--mat-sys-corner-medium),
      outlined-horizontal-padding: 8px,
      outlined-icon-spacing: 4px,
      outlined-icon-offset: -4px,
      protected-container-shape: var(--mat-sys-corner-medium),
      protected-horizontal-padding: 8px,
      protected-icon-spacing: 4px,
      protected-icon-offset: -4px,
      text-container-shape: var(--mat-sys-corner-medium),
      text-horizontal-padding: 8px,
      text-icon-spacing: 4px,
      text-icon-offset: -4px
    )
  );

  @include mat.icon-button-overrides(
    (
      // ? not working
      icon-size: 24px,
      icon-color: var(--mat-sys-primary)
    )
  );

  @include mat.form-field-overrides(
    (
      filled-label-text-size: calc(var(--mat-sys-body-large-size) * 1.125),
      filled-label-text-color: var(--mat-sys-primary),
      filled-hover-label-text-color: var(--mat-sys-primary),
      outlined-label-text-size: calc(var(--mat-sys-body-large-size) * 1.125)
    )
  );

  @include mat.snack-bar-overrides(
    (
      container-color: var(--mat-sys-primary),
      supporting-text-color: var(--mat-sys-on-primary)
    )
  );

  @include mat.dialog-overrides(
    (
      container-max-width: 100vw,
      container-elevation-shadow: var(--mat-sys-level5),
      supporting-text-color: var(--mat-sys-on-surface),
      supporting-text-size: var(--mat-sys-body-large-size),
      headline-padding: 3px 20px,
      content-padding: 12px 20px,
      with-actions-content-padding: 12px 20px 0,
      actions-padding: 3px
    )
  );

  @include mat.checkbox-overrides(
    (
      label-text-size: var(--mat-sys-body-large-size)
    )
  );

  & {
    font: var(--mat-sys-body-large);
    font-size: 15px;
  }
}

:root {
  color-scheme: light;
  @include mat-colors.light;
  &.dark {
    color-scheme: dark;
    @include mat-colors.dark;
  }
}

.plain {
  @include mat.button-overrides(
    (
      text-label-text-color: var(--mat-sys-on-surface)
    )
  );

  @include mat.icon-button-overrides(
    (
      icon-color: var(--mat-sys-on-surface)
    )
  );
}
.accent {
  @include mat.button-overrides(
    (
      text-label-text-color: var(--mat-sys-tertiary),
      outlined-label-text-color: var(--mat-sys-tertiary),
      filled-label-text-color: var(--mat-sys-on-tertiary),
      filled-container-color: var(--mat-sys-tertiary)
    )
  );

  @include mat.icon-button-overrides(
    (
      icon-color: var(--mat-sys-tertiary)
    )
  );

  @include mat.form-field-overrides(
    (
      filled-caret-color: var(--mat-sys-tertiary),
      filled-focus-active-indicator-color: var(--mat-sys-tertiary),
      filled-focus-label-text-color: var(--mat-sys-tertiary),
      filled-label-text-color: var(--mat-sys-tertiary),
      filled-hover-label-text-color: var(--mat-sys-tertiary),
      filled-active-indicator-color: var(--mat-sys-tertiary),
      filled-hover-active-indicator-color: var(--mat-sys-tertiary),
      outlined-caret-color: var(--mat-sys-tertiary),
      outlined-focus-outline-color: var(--mat-sys-tertiary),
      outlined-focus-label-text-color: var(--mat-sys-tertiary),
      outlined-label-text-color: var(--mat-sys-tertiary),
      outlined-hover-label-text-color: var(--mat-sys-tertiary),
      outlined-outline-color: var(--mat-sys-tertiary),
      outlined-hover-outline-color: var(--mat-sys-tertiary)
    )
  );
}

.mat-mdc-form-field {
  width: 100%;
  flex: 1 1 0;

  .mat-mdc-form-field-icon-prefix,
  .mat-mdc-form-field-icon-suffix {
    display: flex;
  }

  .mat-mdc-form-field-text-prefix,
  .mat-mdc-form-field-text-suffix {
    flex: 0 0 auto;
  }

  .mdc-text-field,
  .mat-mdc-form-field-hint-wrapper,
  .mat-mdc-form-field-error-wrapper {
    padding: 0 5px;
  }
}

button.mdc-button {
  min-width: 60px;
}
.mat-mdc-button.mdc-button {
  min-width: unset;
}

.mat-mdc-dialog-surface .mat-mdc-dialog-actions {
  justify-content: center;

  > :not(:first-child) {
    margin-left: 8px;
  }
}

.mat-mdc-menu-item {
  display: flex !important;
  justify-content: space-between;
  padding: 0 10px;

  .shortcut {
    text-align: right;
    font-size: 0.75rem;
    color: var(--mat-sys-outline);
    margin-left: 10px;
  }
}

mat-divider {
  &.mat-divider-horizontal {
    margin: var(--mat-divider-margin) 0;
  }
  &.mat-divider-vertical {
    margin: 0 var(--mat-divider-margin);
  }
  &.placeholder {
    --mat-divider-color: transparent;
  }
}

.mat-tree {
  --node-padding: 0 0 0 20px;

  ul,
  li {
    margin-top: 0;
    margin-bottom: 0;
    list-style-type: none;
  }

  .mat-nested-tree-node div[role="group"] {
    padding: var(--node-padding);
  }

  div[role="group"] > .mat-tree-node {
    padding: var(--node-padding);
  }
}

.mat-mdc-icon-button {
  --mat-icon-button-state-layer-size: var(--mat-icon-size);
  --mat-icon-button-icon-size: var(--mat-icon-size);
  .mat-mdc-button-touch-target {
    width: var(--mat-icon-button-state-layer-size) !important;
    height: var(--mat-icon-button-state-layer-size) !important;
  }
}
mat-icon {
  width: var(--mat-icon-size) !important;
  height: var(--mat-icon-size) !important;
  font-size: var(--mat-icon-size) !important;
  line-height: var(--mat-icon-size) !important;
}

.cdk-overlay-container {
  z-index: calc(var(--top-z-index) + var(--floating-dialog-offset-z-index, 0));
}

.cdk-drag-preview {
  opacity: 0;
}
.cdk-drag-placeholder {
  background: var(--mat-sys-outline-variant);
  border: dotted 3px var(--mat-sys-outline);
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}
.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}
.cdk-drop-list-dragging :not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

mat-tab-group.hide-first-tab {
  .mat-mdc-tab-labels > .mat-mdc-tab:first-child {
    display: none;
  }
}

:root {
  --mat-divider-margin: 5px;
  --mat-icon-size: 24px;
}
